// TODO remove me later
plugins {
    id 'java-library'
    id 'maven-publish'
}
// end TODO remove me later

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    // FIXME
    //annotationProcessor "io.micronaut.docs:micronaut-docs-asciidoc-config-props:$micronautDocsVersion"
    implementation("io.micronaut:micronaut-core")
    implementation("io.micronaut:micronaut-aop")
    implementation("io.micronaut:micronaut-context")
    implementation("io.micronaut:micronaut-http")
    implementation("io.micronaut:micronaut-http-client-core")

    implementation("io.micronaut.grpc:micronaut-grpc-server-runtime")
    implementation("io.micronaut.grpc:micronaut-grpc-client-runtime")

    api "io.micronaut:micronaut-inject"

    testImplementation("org.spockframework:spock-core:${spockVersion}") {
        exclude module: 'groovy-all'
    }
    testImplementation "io.micronaut.test:micronaut-test-spock:$micronautTestVersion"

    implementation(platform("io.opentelemetry:opentelemetry-bom:1.12.0"))
    implementation(platform("io.opentelemetry:opentelemetry-bom-alpha:1.11.0-alpha"))
    api("io.opentelemetry:opentelemetry-api")
    api("io.opentelemetry:opentelemetry-sdk")
    api("io.opentelemetry:opentelemetry-exporter-otlp")
    api("io.opentelemetry:opentelemetry-proto")
    api("io.opentelemetry:opentelemetry-api-metrics")
    api("io.opentelemetry:opentelemetry-exporter-otlp-common")
    api("io.opentelemetry:opentelemetry-extension-annotations")

    implementation(platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:1.10.1-alpha"))
    api("io.opentelemetry.instrumentation:opentelemetry-instrumentation-api")
    api("io.opentelemetry.instrumentation:opentelemetry-grpc-1.6")
    api("io.opentelemetry.instrumentation:opentelemetry-logback-1.0")
    //api("io.opentelemetry.instrumentation:opentelemetry-rxjava-2.0")
    api("io.opentelemetry.instrumentation:opentelemetry-reactor-3.1")
    api("io.opentelemetry.instrumentation:opentelemetry-jdbc")

    compileOnly("io.grpc:grpc-netty")
    compileOnly("io.grpc:grpc-netty-shaded")
}

tasks.withType(Test) {
    useJUnitPlatform()
}
